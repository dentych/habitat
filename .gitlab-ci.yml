stages:
  - build
  - upload
  - release

variables:
  PACKAGE_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/env/${CI_COMMIT_TAG}"

build linux/amd64:
  stage: build
  image: golang
  script:
    - GOOS=linux GOARCH=amd64 go build -o env *.go
  artifacts:
    paths:
      - env
    expire_in: 1 minute

build windows/amd64:
  stage: build
  image: golang
  script:
    - GOOS=windows GOARCH=amd64 go build -o env.exe *.go
  artifacts:
    paths:
      - env.exe
    expire_in: 1 minute

upload artifacts:
  stage: upload
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - printenv
    - 'curl -H "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file env ${PACKAGE_URL}/env'
    - 'curl -H "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file env.exe ${PACKAGE_URL}/env.exe'

release artifacts:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script: |
    release-cli create --name "env v${CI_COMMIT_TAG}" --tag-name $CI_COMMIT_TAG \
            --assets-link "{\"name\":\"env\",\"url\":\"${PACKAGE_URL}/env\"}" \
            --assets-link "{\"name\":\"env.exe\",\"url\":\"${PACKAGE_URL}/env.exe\"}"
